{"ts":1349292659630,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\n<html>\n<head>\n    <title>TimesheetHelper</title>\n\n    <script type=\"text/javascript\" src=\"/apps/2.0p4/sdk.js\"></script>\n\n    <script type=\"text/javascript\">\n        Rally.onReady(function() {\n            Ext.define('CustomApp', {\n                extend: 'Rally.app.App',\n                componentCls: 'app',\n            \n                launch: function() {\n                    //Write app code here\n                }\n            });\n\n            Rally.launchApp('CustomApp', {\n                name: 'TimesheetHelper'\n            });\n        });\n    </script>\n\n    <style type=\"text/css\">\n        .app {\n             /* Add app styles here */\n        }\n    </style>\n</head>\n<body></body>\n</html>\n"]],"start1":0,"start2":0,"length1":0,"length2":712}]],"length":712}
{"contributors":[],"silentsave":false,"ts":1349322065561,"patch":[[{"diffs":[[0,"    "],[-1,"    launch"],[1,"\n                _loadTasksGrid: function(tasksGridDate) {\n                     Rally.data.ModelFactory.getModel({\n                                    type: 'Task',\n                                    success: function(model) {\n                                        this.grid = this.add({\n                                            xtype: 'rallygrid',\n                                            model: model,\n                                            columnCfgs: [\n                                                'FormattedID',\n                                                'Name',\n                                                'Owner',\n                                                'State',\n                                                'ToDo'\n                                            ],\n                                            \n                                            storeConfig: {\n                                                filters: [\n                                                    {\n                                                        property: 'Owner',\n                                                        operator: '=',\n                                                        value: this.getContext().getUser()._ref\n                                                    },\n                                                    {\n                                                        property: 'Iteration.StartDate',\n                                                        operator: '<=',\n                                                        value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                                    },\n                                                    {\n                                                        property: 'Iteration.EndDate',\n                                                        operator: '>=',\n                                                        value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                                    }\n                                                ]\n                                            }\n                                        });\n                                    },\n                                    scope: this\n                                });\n                },\n                \n                _isWeekDay"],[0,": fu"]],"start1":345,"start2":345,"length1":18,"length2":2424},{"diffs":[[0,"ekDay: function("],[1,"date"],[0,") {\n            "]],"start1":2760,"start2":2760,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"//Write app code here"],[1,"return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n                },\n                \n                _lastTenWorkDays: function(currentDate) {\n                  var dates = [];\n                  while(dates.length < 10 ){\n                      // NOTE: getUTCDay returns the day in GMT\n                      if( this._isWeekDay(currentDate)) {\n                        dates.unshift(currentDate);\n                      }\n                      currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n                  }\n                  return dates;\n                },\n                \n                launch: function() {\n                    console.log('launching....');\n                    var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n                    console.log(\"TODAY IS: \" + new Date());\n                    console.log(\"START DATE IS \" + startDate);    \n                    var lastTenWorkDays = this._lastTenWorkDays(startDate);\n                    console.log(lastTenWorkDays);\n                    var startDate = lastTenWorkDays[0];\n                    Ext.create('Rally.data.WsapiDataStore', {\n                        model: 'TimeEntryValue',\n                        autoLoad: true,\n                        listeners: {\n                            load: function(store, data, success) {\n                                var badDay = null;\n                                var currentDayHoursCnt = 0;\n                                var currentRecordIdx = 0;\n                                Ext.Array.each( lastTenWorkDays, function(day) {\n                                    \n                                    var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                                    console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                                    \n                                    // What if they enter a time on a weekend?\n                                    \n                                    do {\n                                        if( this._isWeekDay(currentRecordDay) ) {\n                                            currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                                        }\n                                        if(currentRecordIdx < (data.length-1)) {\n                                            currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                                        } else {\n                                            break;\n                                        }\n                                    } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                                    \n                                    console.log(day + \" for \" + currentDayHoursCnt);\n                                    if(currentDayHoursCnt < 8) {\n                                        badDay = day;\n                                        return false;\n                                    }\n                                    currentDayHoursCnt = 0;\n                                }, this);\n                                var msgCls = \"ok\";\n                                var htmlMessage = 'All is well.';\n                                if(badDay != null) {\n                                    msgCls = \"bad\";\n                                    htmlMessage = 'You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(badDay, \"D, M d, Y\");\n                                    this._loadTasksGrid(badDay);\n                                }\n                                console.log(htmlMessage);\n                                this.add( {\n                                    xtype: 'component',\n                                    cls: \"attention \" + msgCls,\n                                    html: htmlMessage\n                                });\n                                this.add( {\n                                    xtype: 'button',\n                                    text: 'Click here to access your timesheet.',\n                                    href: '/timesheet'\n                                    \n                                });\n                            },\n                            scope: this\n                        },\n                        fetch: ['Hours','DateVal'],\n                        filters: [\n                            {\n                                property: 'TimeEntryItem.User',\n                                operator: '=',\n                                value: this.getContext().getUser()._ref\n                            },\n                            {\n                                property: 'DateVal',\n                                operator: '>=',\n                                value: Rally.util.DateTime.toIsoString(startDate, false)\n                            }],\n                        sorters: [\n                            {\n                                property: 'DateVal',\n                                direction: 'ASC'\n                            }]\n                            \n                    });\n                    \n                   "],[0,"\n   "]],"start1":2800,"start2":2800,"length1":29,"length2":5229},{"diffs":[[0,"/\n        }\n"],[1,"        \n        .bad { color: red }\n        .ok { color: green }\n        \n        .attention { font-size: 20px; font-weight: bold }"],[0,"    </style>"]],"start1":8267,"start2":8267,"length1":24,"length2":156}]],"length":8454,"saved":false}
{"ts":1349322094994,"patch":[[{"diffs":[[0,"asksGridDate) {\n"],[1,"                    console.log(\"Loading Tasks Grid...\");\n"],[0,"                "]],"start1":392,"start2":392,"length1":32,"length2":90}]],"length":8512,"saved":false}
