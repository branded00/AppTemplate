{"ts":1349292573468,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n    launch: function() {\n        //Write app code here\n    }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":146}]],"length":146}
{"contributors":["goldbrickin@gmail.com"],"silentsave":false,"ts":1349293325749,"patch":[[{"diffs":[[0,"    "],[-1,"//Write app code here"],[1,"Rally.data.ModelFactory.getModel({\n                        type: 'UserStory',\n                        success: function(model) {\n                            this.grid = this.add({\n                                xtype: 'rallygrid',\n                                model: model,\n                                columnCfgs: [\n                                    'FormattedID',\n                                    'Name',\n                                    'Owner'\n                                ],\n                                storeConfig: {\n                                    filters: [\n                                        {\n                                            property: 'ScheduleState',\n                                            operator: '=',\n                                            value: 'Defined'\n                                        }\n                                    ]\n                                }\n                            });\n                        },\n                        scope: this\n                    });"],[0,"\n   "]],"start1":110,"start2":110,"length1":29,"length2":1065}]],"length":1182,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349298005131,"patch":[[{"diffs":[[0,"e: '"],[-1,"UserStory"],[1,"Task"],[0,"',\n "]],"start1":176,"start2":176,"length1":17,"length2":12},{"diffs":[[0,"y: '"],[-1,"ScheduleState"],[1,"Owner"],[0,"',\n "]],"start1":794,"start2":794,"length1":21,"length2":13},{"diffs":[[0,"ue: "],[-1,"'Defined'"],[1,"this.getContext().getUser()._ref\n                                        },\n                                        {\n                                            property: 'Iteration.StartDate'\n                                            operator: '<'\n                                            value: new Date()"],[0,"\n   "]],"start1":912,"start2":912,"length1":17,"length2":321}]],"length":1473,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349298365235,"patch":[[{"diffs":[[0,"artDate'"],[1,","],[0,"\n       "]],"start1":1101,"start2":1101,"length1":16,"length2":17},{"diffs":[[0,"tor: '<'"],[1,","],[0,"\n       "]],"start1":1160,"start2":1160,"length1":16,"length2":17}]],"length":1475,"saved":false}
{"ts":1349298917327,"patch":[[{"diffs":[[0,"y: '"],[-1,"Iteration.StartD"],[1,"St"],[0,"ate'"]],"start1":1085,"start2":1085,"length1":24,"length2":10},{"diffs":[[0,"r: '"],[-1,"<"],[1,"!="],[0,"',\n "]],"start1":1148,"start2":1148,"length1":9,"length2":10},{"diffs":[[0,"ue: "],[-1,"new Date()"],[1,"'Accepted'"],[0,"\n   "]],"start1":1204,"start2":1204,"length1":18,"length2":18}]],"length":1462,"saved":false}
{"ts":1349299553973,"patch":[[{"diffs":[[0," 'Owner'"],[1,",\n                                    'ToDo'"],[0,"\n"],[-1,""],[0,"        "]],"start1":563,"start2":563,"length1":17,"length2":61},{"diffs":[[0,"     ],\n"],[1,"                                \n"],[0,"        "]],"start1":643,"start2":643,"length1":16,"length2":49},{"diffs":[[0,"y: '"],[-1,"St"],[1,"Iteration.StartD"],[0,"ate'"]],"start1":1162,"start2":1162,"length1":10,"length2":24},{"diffs":[[0,"r: '"],[-1,"!"],[1,"<"],[0,"=',\n"]],"start1":1239,"start2":1239,"length1":9,"length2":9},{"diffs":[[0,"ue: "],[-1,"'Accepted'"],[1,"Rally.util.DateTime.toIsoString(new Date(), false)\n                                        },\n                                        {\n                                            property: 'Iteration.EndDate',\n                                            operator: '>=',\n                                            value: Rally.util.DateTime.toIsoString(new Date(), false)"],[0,"\n   "]],"start1":1295,"start2":1295,"length1":18,"length2":380}]],"length":1915,"saved":false}
{"ts":1349299642408,"patch":[[{"diffs":[[0,"       'Owner',\n"],[1,"                                    'State',\n"],[0,"                "]],"start1":557,"start2":557,"length1":32,"length2":77}]],"length":1960,"saved":false}
{"ts":1349303008275,"patch":[[{"diffs":[[0,"',\n\n"],[1,"\n"],[0,"    "],[-1,"launch: function("],[1,"_loadTasksGrid: function(tasksGridDate"],[0,") {\n"],[1," "],[0,"    "]],"start1":77,"start2":77,"length1":33,"length2":56},{"diffs":[[0,"toIsoString("],[-1,"new "],[1,"tasksGrid"],[0,"Date"],[-1,"()"],[0,", false)\n   "]],"start1":1387,"start2":1387,"length1":34,"length2":37},{"diffs":[[0,"ing("],[-1,"new "],[1,"tasksGrid"],[0,"Date"],[-1,"()"],[0,", fa"]],"start1":1720,"start2":1720,"length1":18,"length2":21},{"diffs":[[0,"e: this\n"],[-1,""],[0,"        "]],"start1":1947,"start2":1947,"length1":16,"length2":16},{"diffs":[[0,"        });\n"],[1,"    },\n    \n    launch: function() {\n        Ext.create('Rally.data.WsapiDataStore', {\n            model: 'TimeEntryValue',\n            listeners: {\n                load: function(store, data, success) {\n                    var badDay = null;\n                    var currentDay = data[0].get('DateVal');\n                    var currentDayHoursCnt = 0;\n                    Ext.Array.each(data, function(record) {\n                        \n                        var recordDate = record.get('DateVal');\n                        if ( Ext.Date.isEqual(recordDate,currentDay) == false ) {\n                            if(currentDayHoursCnt < 8) {\n                                badDay = currentDay;\n                                return false;\n                            } else {\n                                currentDay = recordDate;\n                            }\n                        } \n                        currentDayHoursCnt += record.get('Hours');\n                    });\n                    var htmlMessage = '<span class=\"ok\">All is well.</span>';\n                    if(badDay != null) {\n                        htmlMessage = '<span class=\"bad\">You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(badDay, \"D, M d, Y\") + '.</span>';\n                        this._loadTasksGrid(badDay);\n                    }\n                    this.add( {\n                    });\n                },\n                scope: this\n            },\n            fetch: ['Hours','DateVal'],\n            filters: [\n                {\n                    property: 'TimeEntryItem.User',\n                    operator: '=',\n                    value: this.getContext().getUser()._ref\n                },\n                {\n                    property: 'DateVal',\n                    operator: '>',\n                    value: Rally.util.DateTime.toIsoString(Rally.util.DateTime.add(new Date(),'day',-14), false)\n                }],\n            sorters: [\n                {\n                    property: 'DateVal',\n                    direction: 'ASC'\n                }]\n                \n        });\n        \n       \n"],[0,"    }\n});\n"]],"start1":1967,"start2":1967,"length1":22,"length2":2143}]],"length":4110,"saved":false}
{"ts":1349303022351,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"this._loadTa"]],"start1":3261,"start2":3261,"length1":24,"length2":26}]],"length":4112,"saved":false}
{"ts":1349303049709,"patch":[[{"diffs":[[0,"               \n"],[1,"                        console.log(record);\n"],[0,"                "]],"start1":2400,"start2":2400,"length1":32,"length2":77}]],"length":4157,"saved":false}
{"ts":1349303092388,"patch":[[{"diffs":[[0," success) {\n"],[1,"                    console.log('in load');\n"],[0,"            "]],"start1":2171,"start2":2171,"length1":24,"length2":68}]],"length":4201,"saved":false}
{"ts":1349303193887,"patch":[[{"diffs":[[0,"unction() {\n"],[1,"        console.log('launching....');\n"],[0,"        Ext."]],"start1":2004,"start2":2004,"length1":24,"length2":62}]],"length":4239,"saved":false}
{"ts":1349303405281,"patch":[[{"diffs":[[0,"ntryValue',\n"],[1,"            autoload: true,\n"],[0,"            "]],"start1":2129,"start2":2129,"length1":24,"length2":52}]],"length":4267,"saved":false}
{"ts":1349303446740,"patch":[[{"diffs":[[0,"    auto"],[-1,"l"],[1,"L"],[0,"oad: tru"]],"start1":2149,"start2":2149,"length1":17,"length2":17}]],"length":4267,"saved":false}
{"ts":1349303482475,"patch":[[{"diffs":[[0,"              }\n"],[1,"                    console.log(htmlMessage);\n"],[0,"                "]],"start1":3465,"start2":3465,"length1":32,"length2":78}]],"length":4313,"saved":false}
{"ts":1349303749869,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(reco"]],"start1":2534,"start2":2534,"length1":32,"length2":34},{"diffs":[[0,"t('Hours');\n"],[1,"                        console.log( currentDay + \" \" currentDayHoursCnt);\n"],[0,"            "]],"start1":3081,"start2":3081,"length1":24,"length2":99}]],"length":4390,"saved":false}
{"ts":1349303780839,"patch":[[{"diffs":[[0,"ay + \" \""],[1," +"],[0," current"]],"start1":3138,"start2":3138,"length1":16,"length2":18}]],"length":4392,"saved":false}
{"ts":1349303808968,"patch":[[{"diffs":[[0,"rdDate;\n"],[1,"                                currentDayHoursCnt = 0;\n"],[0,"        "]],"start1":2961,"start2":2961,"length1":16,"length2":72}]],"length":4448,"saved":false}
{"ts":1349307149547,"patch":[[{"diffs":[[0,"    "],[-1,"launch: function() {\n        console.log('launching....')"],[1,"_lastTenWorkDays: function(currentDate) {\n      var dates = [];\n      while(dates.length() < 10 ){\n          dates.push(currentDate);\n          currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n      }\n      return dates;\n    },\n    \n    launch: function() {\n        console.log('launching....');\n        var lastTenWorkDays = this._lastTenWorkDays(new Date());\n        var startDate = lastTenWorkDays[0]"],[0,";\n  "]],"start1":1991,"start2":1991,"length1":65,"length2":425},{"diffs":[[0,"ing("],[-1,"Rally.util.DateTime.add(new Date(),'day',-14)"],[1,"startDate"],[0,", fa"]],"start1":4536,"start2":4536,"length1":53,"length2":17}]],"length":4772,"saved":false}
{"ts":1349307235336,"patch":[[{"diffs":[[0,"tes."],[-1,"push"],[1,"unshift"],[0,"(cur"]],"start1":2106,"start2":2106,"length1":12,"length2":15},{"diffs":[[0,"ate());\n"],[1,"        console.log(lastTenWorkDays);\n"],[0,"        "]],"start1":2365,"start2":2365,"length1":16,"length2":54}]],"length":4813,"saved":false}
{"ts":1349307359841,"patch":[[{"diffs":[[0,"< 10 ){\n"],[1,"          if( currentDate.getDay() != 0 && currentDate.getDay() != 6) {\n  "],[0,"        "]],"start1":2086,"start2":2086,"length1":16,"length2":90},{"diffs":[[0,"rrentDate);\n"],[1,"          }\n"],[0,"          cu"]],"start1":2194,"start2":2194,"length1":24,"length2":36}]],"length":4899,"saved":false}
{"ts":1349307434297,"patch":[[{"diffs":[[0,"s.length"],[-1,"("],[0,") < 10 )"]],"start1":2075,"start2":2075,"length1":17,"length2":16}]],"length":4898,"saved":false}
{"ts":1349307447896,"patch":[[{"diffs":[[0,"s.length"],[-1,")"],[0," < 10 ){"]],"start1":2075,"start2":2075,"length1":17,"length2":16}]],"length":4897,"saved":false}
{"ts":1349307761960,"patch":[[{"diffs":[[0,"ecord);\n"],[1,"                        //TODO: Fix for GMT TZ issues.\n"],[0,"        "]],"start1":3050,"start2":3050,"length1":16,"length2":71}]],"length":4952,"saved":false}
{"ts":1349308105770,"patch":[[{"diffs":[[0,"ayHoursCnt = 0;\n"],[1,"                    var currentRecordIdx = 0;\n                    Ext.Array.each( lastTenWorkDays, function(day) {\n                        \n                        var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                        \n                    });\n                    \n"],[0,"                "]],"start1":2910,"start2":2910,"length1":32,"length2":328}]],"length":5248,"saved":false}
{"ts":1349308359716,"patch":[[{"diffs":[[0,"                "],[1,"                        var recordDate = record.get('DateVal');\n                        while( currentRecordDay == day ) {\n                            if ( Ext.Date.isEqual(recordDate,currentDay) == false ) {\n                                if(currentDayHoursCnt < 8) {\n                                    badDay = currentDay;\n                                    return false;\n                                } else {\n                                    currentDay = recordDate;\n                                    currentDayHoursCnt = 0;\n                                }\n                            } \n                        \n                            currentRecordDay = data[++currentRecordIdx].get('DateVal');"],[0,"\n               "]],"start1":3160,"start2":3160,"length1":32,"length2":748}]],"length":5964,"saved":false}
{"ts":1349308420204,"patch":[[{"diffs":[[0,"');\n"],[-1,"                                                var recordDate = record.get('DateVal');\n"],[0,"    "]],"start1":3148,"start2":3148,"length1":96,"length2":8},{"diffs":[[0,"get('DateVal');\n"],[1,"                        }\n                        if(currentDayHoursCnt < 8) {\n                            // break out\n                        }\n"],[0,"                "]],"start1":3789,"start2":3789,"length1":32,"length2":178}]],"length":6022,"saved":false}
{"ts":1349308502866,"patch":[[{"diffs":[[0,"    "],[-1,"if ( Ext.Date.isEqual(recordDate,currentDay) == false ) {\n                                if(currentDayHoursCnt < 8) {\n                                    badDay = currentDay;\n                                    return false;\n                                } else {\n                                    currentDay = recordDate;\n                                    currentDayHoursCnt = 0;\n                                }\n                            } \n                        "],[1,"currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n"],[0,"\n   "]],"start1":3235,"start2":3235,"length1":485,"length2":67},{"diffs":[[0,"eak out\n"],[-1,""],[0,"        "]],"start1":3499,"start2":3499,"length1":16,"length2":16},{"diffs":[[0,"              }\n"],[1,"                        currentDayHoursCnt = 0;\n"],[0,"                "]],"start1":3517,"start2":3517,"length1":32,"length2":80}]],"length":5652,"saved":false}
{"ts":1349308523398,"patch":[[{"diffs":[[0,"    "],[-1,"// break out"],[1,"badDay = day;\n                            return false;"],[0,"\n   "]],"start1":3490,"start2":3490,"length1":20,"length2":63}]],"length":5695,"saved":false}
{"ts":1349308533848,"patch":[[{"diffs":[[0,"                "],[1,"/*"],[0,"\n               "]],"start1":3652,"start2":3652,"length1":32,"length2":34},{"diffs":[[0,"            });\n"],[1,"                    */\n"],[0,"                "]],"start1":4519,"start2":4519,"length1":32,"length2":55}]],"length":5720,"saved":false}
{"ts":1349308546387,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"var currentDay ="]],"start1":2821,"start2":2821,"length1":32,"length2":34}]],"length":5722,"saved":false}
{"ts":1349308654667,"patch":[[{"diffs":[[0,"le( "],[-1,"currentRecordDay == day "],[1,"Ext.Date.isEqual( Ext.Date.clearTime(currentRecordDay), Ext.Date.clearTime(day))"],[0,") {\n"]],"start1":3181,"start2":3181,"length1":32,"length2":88}]],"length":5778,"saved":false}
{"ts":1349308735995,"patch":[[{"diffs":[[0,"              }\n"],[1,"                        console.log(day + \" for \" + currentDayHoursCnt);\n"],[0,"                "]],"start1":3455,"start2":3455,"length1":32,"length2":105}]],"length":5851,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349317372765,"patch":[[{"diffs":[[0,"    },\n    \n"],[1,"    _isWeekDay: function(date) {\n        return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n    },\n    \n"],[0,"    _lastTen"]],"start1":1979,"start2":1979,"length1":24,"length2":134},{"diffs":[[0,"    "],[-1,"if( currentDate.getDay() != 0 && currentDate.getDay() != 6"],[1,"// NOTE: getUTCDay returns the day in GMT\n          if( this._isWeekDay(currentDate)"],[0,") {\n"]],"start1":2208,"start2":2208,"length1":66,"length2":92},{"diffs":[[0,"hing....');\n"],[1,"        var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n        console.log(\"TODAY IS: \" + new Date());\n        console.log(\"START DATE IS \" + startDate);    \n"],[0,"        var "]],"start1":2516,"start2":2516,"length1":24,"length2":254},{"diffs":[[0,"orkDays("],[-1,"new "],[1,"start"],[0,"Date"],[-1,"()"],[0,");\n     "]],"start1":2802,"start2":2802,"length1":26,"length2":25},{"diffs":[[0,"    "],[-1,"console.log('in load');\n                    var badDay = null;\n                    //var currentDay = data[0].get('DateVal')"],[1,"var badDay = null"],[0,";\n  "]],"start1":3115,"start2":3115,"length1":132,"length2":25},{"diffs":[[0,"    "],[-1,"while( Ext.Date.isEqual( Ext.Date.clearTime(currentRecordDay), Ext.Date.clearTime(day)"],[1,"console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                        \n                        // What if they enter a time on a weekend?\n                        \n                        do {\n                            if( this._isWeekDay(currentRecordDay) ) {\n                                currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            }\n                            if(currentRecordIdx < (data.length-1)) {\n                                currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                            }\n                        } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                        \n                        /* - TAKE 1\n                        while( Ext.Date.isEqual( currentRecordDay, day"],[0,")) {"]],"start1":3432,"start2":3432,"length1":94,"length2":818},{"diffs":[[0,"ours');\n"],[-1,"\n"],[0,"        "]],"start1":4330,"start2":4330,"length1":17,"length2":16},{"diffs":[[0,"              }\n"],[1,"                        */\n"],[0,"                "]],"start1":4436,"start2":4436,"length1":32,"length2":59},{"diffs":[[0,"               }"],[-1,""],[0,""],[1,", this"],[0,");\n             "]],"start1":4768,"start2":4768,"length1":32,"length2":38},{"diffs":[[0,"ator: '>"],[-1,""],[0,""],[1,"="],[0,"',\n     "]],"start1":6563,"start2":6563,"length1":16,"length2":17}]],"length":6866,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349317482698,"patch":[[{"diffs":[[0,"   \n"],[-1,"                        /* - TAKE 1\n                        while( Ext.Date.isEqual( currentRecordDay, day)) {\n                            currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                        }\n                        */\n"],[0,"    "]],"start1":4136,"start2":4136,"length1":347,"length2":8}]],"length":6527,"saved":false}
{"ts":1349317566378,"patch":[[{"diffs":[[0,"s);\n"],[-1,"                    /*\n                    Ext.Array.each(data, function(record) {\n                        \n                        //console.log(record);\n                        //TODO: Fix for GMT TZ issues.\n                        var recordDate = record.get('DateVal');\n                        if ( Ext.Date.isEqual(recordDate,currentDay) == false ) {\n                            if(currentDayHoursCnt < 8) {\n                                badDay = currentDay;\n                                return false;\n                            } else {\n                                currentDay = recordDate;\n                                currentDayHoursCnt = 0;\n                            }\n                        } \n                        currentDayHoursCnt += record.get('Hours');\n                        console.log( currentDay + \" \" + currentDayHoursCnt);\n                    });\n                    */\n"],[0,"    "]],"start1":4450,"start2":4450,"length1":918,"length2":8}]],"length":5617,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349318211696,"patch":[[{"diffs":[[0,"get('DateVal');\n"],[1,"                            } else {\n                                break;\n"],[0,"                "]],"start1":3992,"start2":3992,"length1":32,"length2":108}]],"length":5693,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349318999210,"patch":[[{"diffs":[[0,"var "],[-1,"htmlMessage = '<span class=\"ok\">"],[1,"msgCls = \"ok\";\n                    var htmlMessage = '"],[0,"All "]],"start1":4550,"start2":4550,"length1":40,"length2":62},{"diffs":[[0,"is well."],[-1,"</span>"],[0,"';\n     "]],"start1":4612,"start2":4612,"length1":23,"length2":16},{"diffs":[[0,"    "],[-1,"htmlMessage = '<span class=\"bad\">"],[1,"msgCls = \"bad\";\n                        htmlMessage = '"],[0,"You "]],"start1":4684,"start2":4684,"length1":41,"length2":63},{"diffs":[[0," Y\")"],[-1," + '.</span>'"],[0,";\n  "]],"start1":4837,"start2":4837,"length1":21,"length2":8},{"diffs":[[0,".add( {\n"],[1,"                        xtype: 'component',\n                        cls: msgCls,\n                        html: htmlMessage\n"],[0,"        "]],"start1":4990,"start2":4990,"length1":16,"length2":139}]],"length":5840,"saved":false}
{"ts":1349319516725,"patch":[[{"diffs":[[0,"    cls:"],[1," \"attention \" +"],[0," msgCls,"]],"start1":5062,"start2":5062,"length1":16,"length2":31}]],"length":5855,"saved":false}
{"ts":1349320805015,"patch":[[{"diffs":[[0,"            });\n"],[1,"                    this.add( {\n                        xtype: 'button',\n                        href: '/timesheet'\n                        \n                    });\n"],[0,"                "]],"start1":5144,"start2":5144,"length1":32,"length2":197}]],"length":6020,"saved":false}
{"ts":1349320896040,"patch":[[{"diffs":[[0,"utton',\n"],[1,"                        text: 'Click here to access your timesheet.',\n"],[0,"        "]],"start1":5225,"start2":5225,"length1":16,"length2":86}]],"length":6090,"saved":false}
{"ts":1349321081695,"patch":[[{"diffs":[[0,"href: '/"],[1,"#/"],[0,"timeshee"]],"start1":5327,"start2":5327,"length1":16,"length2":18}]],"length":6092,"saved":false}
{"ts":1349322178538,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"this._lo"]],"start1":4859,"start2":4859,"length1":18,"length2":16}]],"length":6090,"saved":false}
{"ts":1349322221602,"patch":[[{"diffs":[[0,"GridDate) {\n"],[1,"        console.log(\"Loading tasks grid...\");\n"],[0,"         Ral"]],"start1":116,"start2":116,"length1":24,"length2":70}]],"length":6136,"saved":false}
{"ts":1349322657297,"patch":[[{"diffs":[[0,"  'ToDo'"],[1,",\n                                    'Iteration.Name'"],[0,"\n       "]],"start1":721,"start2":721,"length1":16,"length2":70}]],"length":6190,"saved":false}
{"ts":1349322678312,"patch":[[{"diffs":[[0,"oDo'"],[-1,",\n                                    'Iteration.Name'"],[0,"\n   "]],"start1":725,"start2":725,"length1":62,"length2":8}]],"length":6136,"saved":false}
{"ts":1349322766675,"patch":[[{"diffs":[[0,"on(model) {\n"],[1,"                            this.add( {\n                                xtype: 'component',\n                                html: 'My Tasks for: ' +Rally.util.DateTime.format(badDay, \"D, M d, Y\")\n                            });\n"],[0,"            "]],"start1":295,"start2":295,"length1":24,"length2":252}]],"length":6364,"saved":false}
{"ts":1349322800176,"patch":[[{"diffs":[[0,"DateTime.format("],[-1,"badDay"],[1,"tasksGridDate"],[0,", \"D, M d, Y\")\n "]],"start1":466,"start2":466,"length1":38,"length2":45}]],"length":6371,"saved":false}
{"ts":1349322831142,"patch":[[{"diffs":[[0,"  'ToDo'"],[1,",'Iteration.Name'"],[0,"\n       "]],"start1":956,"start2":956,"length1":16,"length2":33}]],"length":6388,"saved":false}
{"ts":1349322970766,"patch":[[{"diffs":[[0,"oDo'"],[-1,",'Iteration.Name'"],[0,"\n   "]],"start1":960,"start2":960,"length1":25,"length2":8},{"diffs":[[0,"reConfig: {\n"],[1,"                                    fetch: [ 'Iteration.Name' ],\n"],[0,"            "]],"start1":1068,"start2":1068,"length1":24,"length2":89}]],"length":6436,"saved":false}
{"ts":1349323018533,"patch":[[{"diffs":[[0,": {\n"],[-1,"                                    fetch: [ 'Iteration.Name' ],\n"],[0,"    "]],"start1":1076,"start2":1076,"length1":73,"length2":8}]],"length":6371,"saved":false}
{"ts":1349323531127,"patch":[[{"diffs":[[0,"               \n"],[1,"                                listeners: {\n                                    load: function() {\n                                        console.log(\"LOAD of tasks grid.\");\n                                    }\n                                },\n                                \n"],[0,"                "]],"start1":1017,"start2":1017,"length1":32,"length2":314}]],"length":6653,"saved":false}
{"ts":1349323573047,"patch":[[{"diffs":[[0," load: function("],[1,"store, data, success"],[0,") {\n            "]],"start1":1113,"start2":1113,"length1":32,"length2":52},{"diffs":[[0,"log("],[-1,"\"LOAD of tasks grid.\""],[1,"data"],[0,");\n "]],"start1":1201,"start2":1201,"length1":29,"length2":12}]],"length":6656,"saved":false}
{"ts":1349323708581,"patch":[[{"diffs":[[0,"ata, success) {\n"],[1,"                                        console.log(store);\n"],[0,"                "]],"start1":1137,"start2":1137,"length1":32,"length2":92}]],"length":6716,"saved":false}
{"ts":1349323924070,"patch":[[{"diffs":[[0,"   \n"],[-1,"                                listeners: {\n                                    load: function(store, data, success) {\n                                        console.log(store);\n                                        console.log(data);\n                                    }\n                                },\n                                \n"],[0,"    "]],"start1":1029,"start2":1029,"length1":353,"length2":8},{"diffs":[[0,"       ]"],[1,",\n                                    listeners: {\n                                        load: function(store, data, success) {\n                                            console.log(store);\n                                            console.log(data);\n                                        }\n                                    },"],[0,"\n       "]],"start1":2098,"start2":2098,"length1":16,"length2":353}]],"length":6708,"saved":false}
{"ts":1349323928106,"patch":[[{"diffs":[[0,"               }"],[-1,","],[0,"\n               "]],"start1":2426,"start2":2426,"length1":33,"length2":32}]],"length":6707,"saved":false}
{"ts":1349324825527,"patch":[[{"diffs":[[0,"ole.log("],[-1,"store"],[1,"data"],[0,");\n     "]],"start1":2284,"start2":2284,"length1":21,"length2":20},{"diffs":[[0,"        "],[-1,"console.log(data"],[1,"Ext.each( data, function( taskRow ) {\n                                                taskRow.set('CURRENT', \"3\");\n                                            }"],[0,");\n     "]],"start1":2335,"start2":2335,"length1":32,"length2":176}]],"length":6850,"saved":false}
{"ts":1349325009254,"patch":[[{"diffs":[[0,"ttedID',"],[1," "],[0,"\n       "]],"start1":779,"start2":779,"length1":16,"length2":17},{"diffs":[[0,"  'ToDo'"],[1,",\n                                    'CURRENT'"],[0,"\n       "]],"start1":957,"start2":957,"length1":16,"length2":63}]],"length":6898,"saved":false}
{"ts":1349326966842,"patch":[[{"diffs":[[0,"(data);\n"],[1,"                                            debugger;\n"],[0,"        "]],"start1":2339,"start2":2339,"length1":16,"length2":70}]],"length":6952,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349357892475,"patch":[[{"diffs":[[0,"asksGridDate"],[1,", timeSheetData"],[0,") {\n"],[-1,""],[0,"        cons"]],"start1":112,"start2":112,"length1":28,"length2":43},{"diffs":[[0,"            });\n"],[1,"                            var theModel = Ext.define( 'THModel', {\n                                extend: model,\n                                alias: 'THModel',\n                                fields: [\n                                    { name: \"TimeSheet\", type: \"string\", tpl:'test', persist: true} \n                                ]\n                            });\n                            console.log(theModel);\n"],[0,"                "]],"start1":541,"start2":541,"length1":32,"length2":457},{"diffs":[[0," model: "],[-1,"m"],[1,"theM"],[0,"odel,\n  "]],"start1":1116,"start2":1116,"length1":17,"length2":20},{"diffs":[[0,"        "],[-1,"'CURRENT'"],[1,"{ text: 'TimeSheet', dataIndex: 'TimeSheet', tpl: '' }"],[0,"\n       "]],"start1":1438,"start2":1438,"length1":25,"length2":70},{"diffs":[[0,"        "],[1,"//"],[0,"debugger"]],"start1":2871,"start2":2871,"length1":16,"length2":18},{"diffs":[[0,"et('"],[-1,"CURRENT"],[1,"TimeSheet"],[0,"', \""]],"start1":3030,"start2":3030,"length1":15,"length2":17},{"diffs":[[0,"d(badDay"],[1,", data"],[0,");\n     "]],"start1":6239,"start2":6239,"length1":16,"length2":22}]],"length":7450,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349358192402,"patch":[[{"diffs":[[0,"taskRow ) {\n"],[1,"                                                var totalHoursPerTask = 0;\n                                                Ext.each( timeSheetData, function( timeSheetRecord) {\n                                                });\n"],[0,"            "]],"start1":2961,"start2":2961,"length1":24,"length2":253},{"diffs":[[0,"DateVal'"],[1,", 'TimeEntryItem', 'Task'"],[0,"],\n     "]],"start1":7075,"start2":7075,"length1":16,"length2":41}]],"length":7704,"saved":false}
{"ts":1349358402389,"patch":[[{"diffs":[[0,"   do {\n"],[1,"                            if(data[currentRecordIdx].get('Task') != null) console.log(\"NOT NULL TASK\");\n"],[0,"        "]],"start1":5231,"start2":5231,"length1":16,"length2":121}]],"length":7809,"saved":false}
{"ts":1349358428582,"patch":[[{"diffs":[[0,"].get('T"],[-1,"ask"],[1,"imeEntryItem"],[0,"') != nu"]],"start1":5291,"start2":5291,"length1":19,"length2":28}]],"length":7818,"saved":false}
{"ts":1349358457514,"patch":[[{"diffs":[[0,"log("],[-1,"\"NOT NULL TASK\""],[1,"data[currentRecordIdx].get('TimeEntryItem'"],[0,");\n "]],"start1":5331,"start2":5331,"length1":23,"length2":50}]],"length":7845,"saved":false}
{"ts":1349358473795,"patch":[[{"diffs":[[0,"ryItem')"],[1,")"],[0,";\n      "]],"start1":5370,"start2":5370,"length1":16,"length2":17}]],"length":7846,"saved":false}
{"ts":1349358529621,"patch":[[{"diffs":[[0,"ntryItem"],[1,".Task"],[0,"') != nu"]],"start1":5303,"start2":5303,"length1":16,"length2":21},{"diffs":[[0,"ntryItem"],[1,".Task"],[0,"'));\n   "]],"start1":5373,"start2":5373,"length1":16,"length2":21}]],"length":7856,"saved":false}
{"ts":1349358577534,"patch":[[{"diffs":[[0,"imeEntryItem"],[-1,"."],[1,"').get('"],[0,"Task') != nu"]],"start1":5299,"start2":5299,"length1":25,"length2":32},{"diffs":[[0,"log("],[-1,"data[currentRecordIdx].get('TimeEntryItem.Task')"],[1,"\"NOT NULL TASK!\""],[0,");\n "]],"start1":5343,"start2":5343,"length1":56,"length2":24}]],"length":7831,"saved":false}
{"ts":1349358601951,"patch":[[{"diffs":[[0,"m')."],[-1,"get('"],[0,"Task"],[-1,"')"],[0," != "]],"start1":5310,"start2":5310,"length1":19,"length2":12}]],"length":7824,"saved":false}
{"ts":1349358765378,"patch":[[{"diffs":[[0,"etRecord) {\n"],[1,"                                                    var timeEntryItem = timeSheetRecord.get('TimeEntryItem');\n                                                    if ( timeEntryItem.task != null && timeEntryItem.task._ref.equals(taskRow.get(\"_ref\"))) {\n                                                        console.log('MATCHING task.')\n                                                    }\n"],[0,"            "]],"start1":3138,"start2":3138,"length1":24,"length2":416}]],"length":8216,"saved":false}
{"ts":1349358813890,"patch":[[{"diffs":[[0,"ntryItem');\n"],[1,"                                                    console.log( taskRow.get('_ref'));\n"],[0,"            "]],"start1":3248,"start2":3248,"length1":24,"length2":111}]],"length":8303,"saved":false}
{"ts":1349358869354,"patch":[[{"diffs":[[0,"!= null "],[1," ) { //"],[0,"&& timeE"]],"start1":3423,"start2":3423,"length1":16,"length2":23},{"diffs":[[0,"NG task."],[-1,"'"],[1,": ' + timeEntryItem.task._ref"],[0,")\n      "]],"start1":3571,"start2":3571,"length1":17,"length2":45}]],"length":8338,"saved":false}
{"ts":1349358915277,"patch":[[{"diffs":[[0,"tryItem."],[-1,"t"],[1,"T"],[0,"ask != n"]],"start1":3410,"start2":3410,"length1":17,"length2":17},{"diffs":[[0,"+ timeEntryItem."],[-1,"t"],[1,"T"],[0,"ask._ref)\n      "]],"start1":3583,"start2":3583,"length1":33,"length2":33}]],"length":8338,"saved":false}
{"ts":1349359060081,"patch":[[{"diffs":[[0,"ll  "],[-1,") { //"],[0,"&& t"]],"start1":3428,"start2":3428,"length1":14,"length2":8},{"diffs":[[0,"tryItem."],[-1,"t"],[1,"T"],[0,"ask._ref"]],"start1":3441,"start2":3441,"length1":17,"length2":17}]],"length":8332,"saved":false}
{"contributors":["toddaolson@gmail.com"],"silentsave":false,"ts":1349359177084,"patch":[[{"diffs":[[0,"t('_ref'));\n"],[1,"                                                    debugger;\n"],[0,"            "]],"start1":3335,"start2":3335,"length1":24,"length2":86}]],"length":8394,"saved":false}
{"ts":1349359190175,"patch":[[{"diffs":[[0,"));\n"],[-1,"                                                    debugger;\n"],[0,"    "]],"start1":3343,"start2":3343,"length1":70,"length2":8},{"diffs":[[0,"= null  "],[1,") { //"],[0,"&& timeE"]],"start1":3424,"start2":3424,"length1":16,"length2":22},{"diffs":[[0,"\"_ref\"))) {\n"],[1,"                                                        debugger;\n"],[0,"            "]],"start1":3484,"start2":3484,"length1":24,"length2":90}]],"length":8404,"saved":false}
{"ts":1349359298891,"patch":[[{"diffs":[[0,"ll  "],[-1,") { //"],[0,"&& t"]],"start1":3428,"start2":3428,"length1":14,"length2":8},{"diffs":[[0,"_ref"],[-1,".equals("],[1," == "],[0,"task"]],"start1":3454,"start2":3454,"length1":16,"length2":12},{"diffs":[[0,"f\"))"],[-1,")"],[0," {\n"],[-1,"                                                        debugger;\n"],[0,"    "]],"start1":3478,"start2":3478,"length1":78,"length2":11}]],"length":8327,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349359346801,"patch":[[{"diffs":[[0,"t('_ref'));\n"],[1,"                                                    console.log( taskRow);\n"],[0,"            "]],"start1":3335,"start2":3335,"length1":24,"length2":99}]],"length":8402,"saved":false}
{"ts":1349359629972,"patch":[[{"diffs":[[0,"');\n"],[-1,"                                                    console.log( taskRow.get('_ref'));\n"],[0,"    "]],"start1":3256,"start2":3256,"length1":95,"length2":8},{"diffs":[[0,"skRow);\n"],[1,""],[0,"        "]],"start1":3327,"start2":3327,"length1":16,"length2":16},{"diffs":[[0,"(\"_ref\")) {\n"],[1,"                                                        var teiTaskRef = new Rally.util.Ref(timeEntryItem.Task._ref);\n                                                        if( teiTaskRef.getOid() === new Rally.util.Ref(taskRow.get(\"_ref\")).getOid()) {\n    "],[0,"            "]],"start1":3461,"start2":3461,"length1":24,"length2":282}]],"length":8573,"saved":false}
{"ts":1349359645377,"patch":[[{"diffs":[[0,"sk._ref)"],[1,";"],[0,"\n       "]],"start1":3836,"start2":3836,"length1":16,"length2":17}]],"length":8574,"saved":false}
{"ts":1349359653191,"patch":[[{"diffs":[[0,"tem.Task._ref);\n"],[1,"                                                        }\n"],[0,"                "]],"start1":3830,"start2":3830,"length1":32,"length2":90}]],"length":8632,"saved":false}
{"ts":1349359688535,"patch":[[{"diffs":[[0,"null"],[-1,"  && timeEntryItem.Task._ref == taskRow.get(\"_ref\")) "],[1,")"],[0,"{\n  "]],"start1":3414,"start2":3414,"length1":61,"length2":9}]],"length":8580,"saved":false}
{"ts":1349359749966,"patch":[[{"diffs":[[0,"    "],[-1,"console.log('MATCHING task.: '"],[1,"totalHoursPerTask"],[0," +"],[1,"="],[0," time"],[-1,"EntryItem.Task._ref"],[1,"SheetRecord.get('Hours'"],[0,");\n "]],"start1":3731,"start2":3731,"length1":64,"length2":56},{"diffs":[[0,"t', "],[-1,"\"3\""],[1,"totalHoursPerTask"],[0,");\n "]],"start1":4019,"start2":4019,"length1":11,"length2":25}]],"length":8586,"saved":false}
{"ts":1349359815600,"patch":[[{"diffs":[[0,"{ text: "],[-1,"'TimeSheet'"],[1,"Rally.util.DateTime.format(tasksGridDate, \"M/d\")"],[0,", dataIn"]],"start1":1446,"start2":1446,"length1":27,"length2":64}]],"length":8623,"saved":false}
{"ts":1349359845549,"patch":[[{"diffs":[[0,"Date, \"M"],[-1,"/"],[1," "],[0,"d\"), dat"]],"start1":1490,"start2":1490,"length1":17,"length2":17}]],"length":8623,"saved":false}
{"ts":1349359874232,"patch":[[{"diffs":[[0,"dDate, \""],[1,"D "],[0,"M d\"), d"]],"start1":1489,"start2":1489,"length1":16,"length2":18}]],"length":8625,"saved":false}
{"ts":1349360697168,"patch":[[{"diffs":[[0," != null"],[1," && Ext.Date.isEqual(timeEntryItem.get('DateVal'), tasksGridDate)"],[0,"){\n     "]],"start1":3449,"start2":3449,"length1":16,"length2":81}]],"length":8690,"saved":false}
{"ts":1349360725125,"patch":[[{"diffs":[[0,"ual(time"],[-1,"EntryItem"],[1,"SheetRecord"],[0,".get('Da"]],"start1":3474,"start2":3474,"length1":25,"length2":27}]],"length":8692,"saved":false}
{"ts":1349360779810,"patch":[[{"diffs":[[0,"ole.log("],[-1," taskRow"],[1,"timeSheetRecord.get('DateVal') + \" vs \" + tasksGridDate"],[0,");\n     "]],"start1":3355,"start2":3355,"length1":24,"length2":71}]],"length":8739,"saved":false}
{"ts":1349361149570,"patch":[[{"diffs":[[0,"t(badDay"],[1,".toUTCString()"],[0,", \"D, M "]],"start1":7437,"start2":7437,"length1":16,"length2":30}]],"length":8753,"saved":false}
{"ts":1349361178319,"patch":[[{"diffs":[[0,".log(day"],[1,".toUTCString()"],[0," + \" for"]],"start1":6865,"start2":6865,"length1":16,"length2":30}]],"length":8767,"saved":false}
{"ts":1349361315859,"patch":[[{"diffs":[[0,"' + "],[-1,"Rally.util.DateTime.format("],[0,"badD"]],"start1":7422,"start2":7422,"length1":35,"length2":8},{"diffs":[[0,"String()"],[-1,", \"D, M d, Y\")"],[0,";\n      "]],"start1":7438,"start2":7438,"length1":30,"length2":16}]],"length":8726,"saved":false}
{"ts":1349361518671,"patch":[[{"diffs":[[0," \"bad\";\n"],[1,"                        var prettyDate = Rally.util.DateTime.add(badDay, \"minute\", badDay.getTimeZoneOffset());\n"],[0,"        "]],"start1":7328,"start2":7328,"length1":16,"length2":128},{"diffs":[[0,"' + "],[-1,"badDay.toUTCString("],[1,"format(prettyDate, \"D, M d, Y\""],[0,");\n "]],"start1":7534,"start2":7534,"length1":27,"length2":38}]],"length":8849,"saved":false}
{"ts":1349361561616,"patch":[[{"diffs":[[0,".getTime"],[-1,"Z"],[1,"z"],[0,"oneOffse"]],"start1":7425,"start2":7425,"length1":17,"length2":17}]],"length":8849,"saved":false}
{"ts":1349361576364,"patch":[[{"diffs":[[0," on ' + "],[1,"Rally.util.DateTime."],[0,"format(p"]],"start1":7530,"start2":7530,"length1":16,"length2":36}]],"length":8869,"saved":false}
{"ts":1349361661504,"patch":[[{"diffs":[[0," grid...\");\n"],[1,"        var prettyDate = Rally.util.DateTime.add(tasksGridDate, \"minute\", tasksGridDate.getTimezoneOffset());\n"],[0,"         Ral"]],"start1":177,"start2":177,"length1":24,"length2":134},{"diffs":[[0,"Time.format("],[-1,"tasksGrid"],[1,"pretty"],[0,"Date, \"D, M "]],"start1":595,"start2":595,"length1":33,"length2":30},{"diffs":[[0,".format("],[-1,"tasksGrid"],[1,"pretty"],[0,"Date, \"D"]],"start1":1580,"start2":1580,"length1":25,"length2":22}]],"length":8973,"saved":false}
{"ts":1349362013598,"patch":[[{"diffs":[[0,"t', tpl:"],[1," '', editor:"],[0," '' }\n  "]],"start1":1630,"start2":1630,"length1":16,"length2":28}]],"length":8985,"saved":false}
{"ts":1349362050468,"patch":[[{"diffs":[[0,"st: true"],[1,", editor: ''"],[0,"} \n     "]],"start1":961,"start2":961,"length1":16,"length2":28}]],"length":8997,"saved":false}
{"ts":1349362055404,"patch":[[{"diffs":[[0,"pl: '', "],[-1,"editor: ''"],[0," }\n     "]],"start1":1647,"start2":1647,"length1":26,"length2":16}]],"length":8987,"saved":false}
{"ts":1349362057178,"patch":[[{"diffs":[[0," tpl: ''"],[-1,","],[0,"  }\n    "]],"start1":1645,"start2":1645,"length1":17,"length2":16}]],"length":8986,"saved":false}
{"ts":1349362594673,"patch":[[{"diffs":[[0,"e: \""],[-1,"string"],[1,"number"],[0,"\", t"]],"start1":931,"start2":931,"length1":14,"length2":14},{"diffs":[[0,"true"],[-1,", editor: ''"],[0,"} \n "]],"start1":965,"start2":965,"length1":20,"length2":8}]],"length":8974,"saved":false}
{"ts":1349362813062,"patch":[[{"diffs":[[0,"st: true"],[1,", editor: { xtype: 'numberfield' }"],[0,"} \n     "]],"start1":961,"start2":961,"length1":16,"length2":50}]],"length":9008,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349363025406,"patch":[[{"diffs":[[0,"Sheet\", "],[1,"x"],[0,"type: \"n"]],"start1":920,"start2":920,"length1":16,"length2":17},{"diffs":[[0," \"number"],[1,"field"],[0,"\", tpl:'"]],"start1":934,"start2":934,"length1":16,"length2":21},{"diffs":[[0,"st: true"],[1,"}//"],[0,", editor"]],"start1":967,"start2":967,"length1":16,"length2":19}]],"length":9017,"saved":false}
{"ts":1349363197886,"patch":[[{"diffs":[[0,"        "],[1,"'Timesheet'}\n                                    //"],[0,"{ text: "]],"start1":1588,"start2":1588,"length1":16,"length2":67}]],"length":9068,"saved":false}
{"ts":1349363386195,"patch":[[{"diffs":[[0," \"number"],[-1,"field"],[0,"\", tpl:'"]],"start1":934,"start2":934,"length1":21,"length2":16},{"diffs":[[0,"    "],[-1,"'Timesheet'}\n                                    //"],[0,"{ te"]],"start1":1587,"start2":1587,"length1":59,"length2":8}]],"length":9012,"saved":false}
{"ts":1349363434988,"patch":[[{"diffs":[[0," \"number"],[1,"field"],[0,"\", tpl:'"]],"start1":934,"start2":934,"length1":16,"length2":21}]],"length":9017,"saved":false}
{"ts":1349363933812,"patch":[[{"diffs":[[0,"Sheet\", "],[-1,"x"],[0,"type: \"n"]],"start1":920,"start2":920,"length1":17,"length2":16},{"diffs":[[0," \"number"],[-1,"field"],[0,"\", tpl:'"]],"start1":933,"start2":933,"length1":21,"length2":16},{"diffs":[[0,"true"],[-1,"}//"],[0,", ed"]],"start1":965,"start2":965,"length1":11,"length2":8},{"diffs":[[0,"d.get('Hours');\n"],[1,"                                                            var theTimesheetRecord = timeSheetRecord;\n"],[0,"                "]],"start1":4062,"start2":4062,"length1":32,"length2":134},{"diffs":[[0,"heet', t"],[-1,"otalHoursPerTask"],[1,"heTimesheetRecord.get('Hours')"],[0,");\n     "]],"start1":4410,"start2":4410,"length1":32,"length2":46}]],"length":9124,"saved":false}
{"ts":1349364039162,"patch":[[{"diffs":[[0,"');\n"],[-1,"                                                            var theTimesheetRecord = timeSheetRecord;\n"],[0,"    "]],"start1":4074,"start2":4074,"length1":110,"length2":8},{"diffs":[[0,"              }\n"],[1,""],[0,"                "]],"start1":4120,"start2":4120,"length1":32,"length2":32},{"diffs":[[0,"        "],[1,"//"],[0,"taskRow."]],"start1":4282,"start2":4282,"length1":16,"length2":18},{"diffs":[[0,"', t"],[-1,"heTimesheetRecord.get('Hours')"],[1,"otalHoursPerTask"],[0,");\n "]],"start1":4314,"start2":4314,"length1":38,"length2":24}]],"length":9010,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349364073186,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"taskRow."]],"start1":4282,"start2":4282,"length1":18,"length2":16}]],"length":9008,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349364114086,"patch":[[{"diffs":[[0,"pl:'"],[-1,"test"],[0,"', p"]],"start1":945,"start2":945,"length1":12,"length2":8}]],"length":9004,"saved":false}
{"ts":1349364177583,"patch":[[{"diffs":[[0," tpl:'',"],[1," tdCls: 'wrap-text',"],[0," persist"]],"start1":943,"start2":943,"length1":16,"length2":36}]],"length":9024,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349364462528,"patch":[[{"diffs":[[0,"pl:'"],[-1,"', tdCls: 'wrap-text'"],[1,"test', readOnly: false"],[0,", pe"]],"start1":945,"start2":945,"length1":29,"length2":30},{"diffs":[[0,"xtype: '"],[1,"rally"],[0,"numberfi"]],"start1":998,"start2":998,"length1":16,"length2":21}]],"length":9030,"saved":false}
{"ts":1349364607501,"patch":[[{"diffs":[[0,"t\", "],[1,"x"],[0,"type: \""],[1,"rally"],[0,"number"],[1,"field"],[0,"\", t"]],"start1":924,"start2":924,"length1":21,"length2":32},{"diffs":[[0,"st: true"],[1,"}//"],[0,", editor"]],"start1":989,"start2":989,"length1":16,"length2":19},{"diffs":[[0,"    "],[-1,"      "],[-1,"                  ]"],[0,"\n   "]],"start1":1046,"start2":1046,"length1":33,"length2":8}]],"length":9019,"saved":false}
{"ts":1349364632840,"patch":[[{"diffs":[[0,"t\", "],[-1,"x"],[0,"type: \""],[-1,"rally"],[0,"number"],[-1,"field"],[0,"\", t"]],"start1":924,"start2":924,"length1":32,"length2":21},{"diffs":[[0,"true"],[-1,"}//"],[0,", ed"]],"start1":982,"start2":982,"length1":11,"length2":8}]],"length":9005,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349368432309,"patch":[[{"diffs":[[1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n\n    _loadTasksGrid: function(tasksGridDate, timeSheetData) {\n        console.log(\"Loading tasks grid...\");\n        var prettyDate = Rally.util.DateTime.add(tasksGridDate, \"minute\", tasksGridDate.getTimezoneOffset());\n         Rally.data.ModelFactory.getModel({\n                        type: 'Task',\n                        success: function(model) {\n                            this.add( {\n                                xtype: 'component',\n                                html: 'My Tasks for: ' +Rally.util.DateTime.format(prettyDate, \"D, M d, Y\")\n                            });\n                            var theModel = Ext.define( 'THModel', {\n                                extend: model,\n                                alias: 'THModel',\n                                fields: [\n                                    { name: \"TimeSheet\", type: \"number\", readOnly: false, persist: true } \n                                ]    \n                            });\n                            console.log(theModel);\n                            this.grid = this.add({\n                                xtype: 'rallygrid',\n                                model: theModel,\n                                columnCfgs: [\n                                    'FormattedID', \n                                    'Name',\n                                    'Owner',\n                                    'State',\n                                    'ToDo',\n                                    { text: Rally.util.DateTime.format(prettyDate, \"D M d\"), tpl: '', tdCls: \"editable\", editor: { xtype: 'rallynumberfield' }, dataIndex: 'TimeSheet'  }\n                                    //'TimeSheet'\n                                ],\n                                listeners: {\n                                    beforestatesave: function() {\n                                        console.log('before save...');\n                                    }\n                                },\n                                storeConfig: {\n                                    filters: [\n                                        {\n                                            property: 'Owner',\n                                            operator: '=',\n                                            value: this.getContext().getUser()._ref\n                                        },\n                                        {\n                                            property: 'Iteration.StartDate',\n                                            operator: '<=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        },\n                                        {\n                                            property: 'Iteration.EndDate',\n                                            operator: '>=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        }\n                                    ],\n                                    listeners: {\n                                        beforesync: function() {\n                                            console.log(\"SAVING...\");\n                                        },\n                                        load: function(store, data, success) {\n                                            //console.log(data);\n                                            //debugger;\n                                            Ext.each( data, function( taskRow ) {\n                                                var totalHoursPerTask = 0;\n                                                Ext.each( timeSheetData, function( timeSheetRecord) {\n                                                    var timeEntryItem = timeSheetRecord.get('TimeEntryItem');\n                                                    //console.log(timeSheetRecord.get('DateVal') + \" vs \" + tasksGridDate);\n                                                    if ( timeEntryItem.Task != null && Ext.Date.isEqual(timeSheetRecord.get('DateVal'), tasksGridDate)){\n                                                        var teiTaskRef = new Rally.util.Ref(timeEntryItem.Task._ref);\n                                                        if( teiTaskRef.getOid() === new Rally.util.Ref(taskRow.get(\"_ref\")).getOid()) {\n                                                            totalHoursPerTask += timeSheetRecord.get('Hours');\n                                                        }\n                                                    }\n                                                });\n                                                taskRow.set('TimeSheet', totalHoursPerTask);\n                                            });\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        scope: this\n                    });\n    },\n    \n    _isWeekDay: function(date) {\n        return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n    },\n    \n    _lastTenWorkDays: function(currentDate) {\n      var dates = [];\n      while(dates.length < 10 ){\n          // NOTE: getUTCDay returns the day in GMT\n          if( this._isWeekDay(currentDate)) {\n            dates.unshift(currentDate);\n          }\n          currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n      }\n      return dates;\n    },\n    \n    launch: function() {\n        console.log('launching....');\n        var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n        console.log(\"TODAY IS: \" + new Date());\n        console.log(\"START DATE IS \" + startDate);    \n        var lastTenWorkDays = this._lastTenWorkDays(startDate);\n        console.log(lastTenWorkDays);\n        var startDate = lastTenWorkDays[0];\n        Ext.create('Rally.data.WsapiDataStore', {\n            model: 'TimeEntryValue',\n            autoLoad: true,\n            listeners: {\n                load: function(store, data, success) {\n                    var badDay = null;\n                    var currentDayHoursCnt = 0;\n                    var currentRecordIdx = 0;\n                    Ext.Array.each( lastTenWorkDays, function(day) {\n                        \n                        var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                        //console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                        \n                        // What if they enter a time on a weekend?\n                        \n                        do {\n                            if(data[currentRecordIdx].get('TimeEntryItem').Task != null) console.log(\"NOT NULL TASK!\");\n                            if( this._isWeekDay(currentRecordDay) ) {\n                                currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            }\n                            if(currentRecordIdx < (data.length-1)) {\n                                currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                            } else {\n                                break;\n                            }\n                        } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                        \n                        //console.log(day.toUTCString() + \" for \" + currentDayHoursCnt);\n                        if(currentDayHoursCnt < 8) {\n                            badDay = day;\n                            return false;\n                        }\n                        currentDayHoursCnt = 0;\n                    }, this);\n                    var msgCls = \"ok\";\n                    var htmlMessage = 'All is well.';\n                    if(badDay != null) {\n                        msgCls = \"bad\";\n                        var prettyDate = Rally.util.DateTime.add(badDay, \"minute\", badDay.getTimezoneOffset());\n                        htmlMessage = 'You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(prettyDate, \"D, M d, Y\");\n                        this._loadTasksGrid(badDay, data);\n                    }\n                    console.log(htmlMessage);\n                    this.add( {\n                        xtype: 'component',\n                        cls: \"attention \" + msgCls,\n                        html: htmlMessage\n                    });\n                    this.add( {\n                        xtype: 'button',\n                        text: 'Click here to access your timesheet.',\n                        href: '/#/timesheet'\n                        \n                    });\n                },\n                scope: this\n            },\n            fetch: ['Hours','DateVal', 'TimeEntryItem', 'Task'],\n            filters: [\n                {\n                    property: 'TimeEntryItem.User',\n                    operator: '=',\n                    value: this.getContext().getUser()._ref\n                },\n                {\n                    property: 'DateVal',\n                    operator: '>=',\n                    value: Rally.util.DateTime.toIsoString(startDate, false)\n                }],\n            sorters: [\n                {\n                    property: 'DateVal',\n                    direction: 'ASC'\n                }]\n                \n        });\n        \n       \n    }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":9500}]],"length":9500,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349368433808,"patch":[[{"diffs":[[1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n\n    _loadTasksGrid: function(tasksGridDate, timeSheetData) {\n        console.log(\"Loading tasks grid...\");\n        var prettyDate = Rally.util.DateTime.add(tasksGridDate, \"minute\", tasksGridDate.getTimezoneOffset());\n         Rally.data.ModelFactory.getModel({\n                        type: 'Task',\n                        success: function(model) {\n                            this.add( {\n                                xtype: 'component',\n                                html: 'My Tasks for: ' +Rally.util.DateTime.format(prettyDate, \"D, M d, Y\")\n                            });\n                            var theModel = Ext.define( 'THModel', {\n                                extend: model,\n                                alias: 'THModel',\n                                fields: [\n                                    { name: \"TimeSheet\", type: \"number\", readOnly: false, persist: true } \n                                ]    \n                            });\n                            console.log(theModel);\n                            this.grid = this.add({\n                                xtype: 'rallygrid',\n                                model: theModel,\n                                columnCfgs: [\n                                    'FormattedID', \n                                    'Name',\n                                    'Owner',\n                                    'State',\n                                    'ToDo',\n                                    { text: Rally.util.DateTime.format(prettyDate, \"D M d\"), tpl: '', tdCls: \"editable\", editor: { xtype: 'rallynumberfield' }, dataIndex: 'TimeSheet'  }\n                                    //'TimeSheet'\n                                ],\n                                listeners: {\n                                    beforestatesave: function() {\n                                        console.log('before save...');\n                                    }\n                                },\n                                storeConfig: {\n                                    filters: [\n                                        {\n                                            property: 'Owner',\n                                            operator: '=',\n                                            value: this.getContext().getUser()._ref\n                                        },\n                                        {\n                                            property: 'Iteration.StartDate',\n                                            operator: '<=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        },\n                                        {\n                                            property: 'Iteration.EndDate',\n                                            operator: '>=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        }\n                                    ],\n                                    listeners: {\n                                        beforesync: function() {\n                                            console.log(\"SAVING...\");\n                                        },\n                                        load: function(store, data, success) {\n                                            //console.log(data);\n                                            //debugger;\n                                            Ext.each( data, function( taskRow ) {\n                                                var totalHoursPerTask = 0;\n                                                Ext.each( timeSheetData, function( timeSheetRecord) {\n                                                    var timeEntryItem = timeSheetRecord.get('TimeEntryItem');\n                                                    //console.log(timeSheetRecord.get('DateVal') + \" vs \" + tasksGridDate);\n                                                    if ( timeEntryItem.Task != null && Ext.Date.isEqual(timeSheetRecord.get('DateVal'), tasksGridDate)){\n                                                        var teiTaskRef = new Rally.util.Ref(timeEntryItem.Task._ref);\n                                                        if( teiTaskRef.getOid() === new Rally.util.Ref(taskRow.get(\"_ref\")).getOid()) {\n                                                            totalHoursPerTask += timeSheetRecord.get('Hours');\n                                                        }\n                                                    }\n                                                });\n                                                taskRow.set('TimeSheet', totalHoursPerTask);\n                                            });\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        scope: this\n                    });\n    },\n    \n    _isWeekDay: function(date) {\n        return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n    },\n    \n    _lastTenWorkDays: function(currentDate) {\n      var dates = [];\n      while(dates.length < 10 ){\n          // NOTE: getUTCDay returns the day in GMT\n          if( this._isWeekDay(currentDate)) {\n            dates.unshift(currentDate);\n          }\n          currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n      }\n      return dates;\n    },\n    \n    launch: function() {\n        console.log('launching....');\n        var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n        console.log(\"TODAY IS: \" + new Date());\n        console.log(\"START DATE IS \" + startDate);    \n        var lastTenWorkDays = this._lastTenWorkDays(startDate);\n        console.log(lastTenWorkDays);\n        var startDate = lastTenWorkDays[0];\n        Ext.create('Rally.data.WsapiDataStore', {\n            model: 'TimeEntryValue',\n            autoLoad: true,\n            listeners: {\n                load: function(store, data, success) {\n                    var badDay = null;\n                    var currentDayHoursCnt = 0;\n                    var currentRecordIdx = 0;\n                    Ext.Array.each( lastTenWorkDays, function(day) {\n                        \n                        var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                        //console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                        \n                        // What if they enter a time on a weekend?\n                        \n                        do {\n                            if(data[currentRecordIdx].get('TimeEntryItem').Task != null) console.log(\"NOT NULL TASK!\");\n                            if( this._isWeekDay(currentRecordDay) ) {\n                                currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            }\n                            if(currentRecordIdx < (data.length-1)) {\n                                currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                            } else {\n                                break;\n                            }\n                        } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                        \n                        //console.log(day.toUTCString() + \" for \" + currentDayHoursCnt);\n                        if(currentDayHoursCnt < 8) {\n                            badDay = day;\n                            return false;\n                        }\n                        currentDayHoursCnt = 0;\n                    }, this);\n                    var msgCls = \"ok\";\n                    var htmlMessage = 'All is well.';\n                    if(badDay != null) {\n                        msgCls = \"bad\";\n                        var prettyDate = Rally.util.DateTime.add(badDay, \"minute\", badDay.getTimezoneOffset());\n                        htmlMessage = 'You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(prettyDate, \"D, M d, Y\");\n                        this._loadTasksGrid(badDay, data);\n                    }\n                    console.log(htmlMessage);\n                    this.add( {\n                        xtype: 'component',\n                        cls: \"attention \" + msgCls,\n                        html: htmlMessage\n                    });\n                    this.add( {\n                        xtype: 'button',\n                        text: 'Click here to access your timesheet.',\n                        href: '/#/timesheet'\n                        \n                    });\n                },\n                scope: this\n            },\n            fetch: ['Hours','DateVal', 'TimeEntryItem', 'Task'],\n            filters: [\n                {\n                    property: 'TimeEntryItem.User',\n                    operator: '=',\n                    value: this.getContext().getUser()._ref\n                },\n                {\n                    property: 'DateVal',\n                    operator: '>=',\n                    value: Rally.util.DateTime.toIsoString(startDate, false)\n                }],\n            sorters: [\n                {\n                    property: 'DateVal',\n                    direction: 'ASC'\n                }]\n                \n        });\n        \n       \n    }\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":9500}]],"length":9500,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349368666522,"patch":[[{"diffs":[[0,"eld'"],[-1," }, dataIndex: 'TimeSheet'  }\n                                    //'TimeSheet'\n                                ],\n                                listeners: {\n                                    beforestatesave: function() {\n                                        console.log('before save...');\n                                    }\n                                },\n                                storeConfig: {\n                                    filters: [\n                                        {\n                                            property: 'Owner',\n                                            operator: '=',\n                                            value: this.getContext().getUser()._ref\n                                        },\n                                        {\n                                            property: 'Iteration.StartDate',\n                                            operator: '<=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        },\n                                        {\n                                            property: 'Iteration.EndDate',\n                                            operator: '>=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        }\n                                    ],\n                                    listeners: {\n                                        beforesync: function() {\n                                            console.log(\"SAVING...\");\n                                        },\n                                        load: function(store, data, success) {\n                                            //console.log(data);\n                                            //debugger;\n                                            Ext.each( data, function( taskRow ) {\n                                                var totalHoursPerTask = 0;\n                                                Ext.each( timeSheetData, function( timeSheetRecord) {\n                                                    var timeEntryItem = timeSheetRecord.get('TimeEntryItem');\n                                                    //console.log(timeSheetRecord.get('DateVal') + \" vs \" + tasksGridDate);\n                                                    if ( timeEntryItem.Task != null && Ext.Date.isEqual(timeSheetRecord.get('DateVal'), tasksGridDate)){\n                                                        var teiTaskRef = new Rally.util.Ref(timeEntryItem.Task._ref);\n                                                        if( teiTaskRef.getOid() === new Rally.util.Ref(taskRow.get(\"_ref\")).getOid()) {\n                                                            totalHoursPerTask += timeSheetRecord.get('Hours');\n                                                        }\n                                                    }\n                                                });\n                                                taskRow.set('TimeSheet', totalHoursPerTask);\n                                            });\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        scope: this\n                    });\n    },\n    \n    _isWeekDay: function(date) {\n        return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n    },\n    \n    _lastTenWorkDays: function(currentDate) {\n      var dates = [];\n      while(dates.length < 10 ){\n          // NOTE: getUTCDay returns the day in GMT\n          if( this._isWeekDay(currentDate)) {\n            dates.unshift(currentDate);\n          }\n          currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n      }\n      return dates;\n    },\n    \n    launch: function() {\n        console.log('launching....');\n        var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n        console.log(\"TODAY IS: \" + new Date());\n        console.log(\"START DATE IS \" + startDate);    \n        var lastTenWorkDays = this._lastTenWorkDays(startDate);\n        console.log(lastTenWorkDays);\n        var startDate = lastTenWorkDays[0];\n        Ext.create('Rally.data.WsapiDataStore', {\n            model: 'TimeEntryValue',\n            autoLoad: true,\n            listeners: {\n                load: function(store, data, success) {\n                    var badDay = null;\n                    var currentDayHoursCnt = 0;\n                    var currentRecordIdx = 0;\n                    Ext.Array.each( lastTenWorkDays, function(day) {\n                        \n                        var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                        //console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                        \n                        // What if they enter a time on a weekend?\n                        \n                        do {\n                            if(data[currentRecordIdx].get('TimeEntryItem').Task != null) console.log(\"NOT NULL TASK!\");\n                            if( this._isWeekDay(currentRecordDay) ) {\n                                currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            }\n                            if(currentRecordIdx < (data.length-1)) {\n                                currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                            } else {\n                                break;\n                            }\n                        } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                        \n                        //console.log(day.toUTCString() + \" for \" + currentDayHoursCnt);\n                        if(currentDayHoursCnt < 8) {\n                            badDay = day;\n                            return false;\n                        }\n                        currentDayHoursCnt = 0;\n                    }, this);\n                    var msgCls = \"ok\";\n                    var htmlMessage = 'All is well.';\n                    if(badDay != null) {\n                        msgCls = \"bad\";\n                        var prettyDate = Rally.util.DateTime.add(badDay, \"minute\", badDay.getTimezoneOffset());\n                        htmlMessage = 'You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(prettyDate, \"D, M d, Y\");\n                        this._loadTasksGrid(badDay, data);\n                    }\n                    console.log(htmlMessage);\n                    this.add( {\n                        xtype: 'component',\n                        cls: \"attention \" + msgCls,\n                        html: htmlMessage\n                    });\n                    this.add( {\n                        xtype: 'button',\n                        text: 'Click here to access your timesheet.',\n                        href: '/#/timesheet'\n                        \n                    });\n                },\n                scope: this\n            },\n            fetch: ['Hours','DateVal', 'TimeEntryItem', 'Task'],\n            filters: [\n                {\n                    property: 'TimeEntryItem.User',\n                    operator: '=',\n                    value: this.getContext().getUser()._ref\n                },\n                {\n                    property: 'DateVal',\n                    operator: '>=',\n                    value: Rally.util.DateTime.toIsoString(startDate, false)\n                }],\n            sorters: [\n                {\n                    property: 'DateVal',\n                    direction: 'ASC'\n                }]\n                \n        });\n        \n       \n    }\n});\nExt.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n\n    _loadTasksGrid: function(tasksGridDate, timeSheetData) {\n        console.log(\"Loading tasks grid...\");\n        var prettyDate = Rally.util.DateTime.add(tasksGridDate, \"minute\", tasksGridDate.getTimezoneOffset());\n         Rally.data.ModelFactory.getModel({\n                        type: 'Task',\n                        success: function(model) {\n                            this.add( {\n                                xtype: 'component',\n                                html: 'My Tasks for: ' +Rally.util.DateTime.format(prettyDate, \"D, M d, Y\")\n                            });\n                            var theModel = Ext.define( 'THModel', {\n                                extend: model,\n                                alias: 'THModel',\n                                fields: [\n                                    { name: \"TimeSheet\", type: \"number\", readOnly: false, persist: true } \n                                ]    \n                            });\n                            console.log(theModel);\n                            this.grid = this.add({\n                                xtype: 'rallygrid',\n                                model: theModel,\n                                columnCfgs: [\n                                    'FormattedID', \n                                    'Name',\n                                    'Owner',\n                                    'State',\n                                    'ToDo',\n                                    { text: Rally.util.DateTime.format(prettyDate, \"D M d\"), tpl: '', tdCls: \"editable\", editor: { xtype: 'rallynumberfield' "],[1,", listeners: { beforestatesave: function() {console.log('foo'); }"],[0,"}, d"]],"start1":1679,"start2":1679,"length1":9509,"length2":73}]],"length":9564,"saved":false}
{"ts":1349368706748,"patch":[[{"diffs":[[0,"tion() {"],[1," "],[0,"console."]],"start1":1719,"start2":1719,"length1":16,"length2":17},{"diffs":[[0,"'foo'); "],[1,"}"],[0,"}}, data"]],"start1":1740,"start2":1740,"length1":16,"length2":17}]],"length":9566,"saved":false}
{"ts":1349368741247,"patch":[[{"diffs":[[0,"               }"],[1,",\n                                    edit: function() { console.log(\"grid edit.\"); }"],[0,"\n               "]],"start1":2067,"start2":2067,"length1":32,"length2":117}]],"length":9651,"saved":false}
{"ts":1349368855855,"patch":[[{"diffs":[[0,"ion("],[-1,") { console.log(\"grid edit.\");"],[1,"editor, e, eOpts) { \n                                        console.log(\"record: \" + e.record + \", field: \" + e.field + \", value: \" + e.value);\n                                   "],[0," }\n "]],"start1":2132,"start2":2132,"length1":38,"length2":188}]],"length":9801,"saved":false}
{"ts":1349368910181,"patch":[[{"diffs":[[0,"+ e.value);\n"],[1,"                                        if ( e.field === \"TimeSheet\") {\n                                            console.log('this is a timesheet');\n                                        }\n"],[0,"            "]],"start1":2269,"start2":2269,"length1":24,"length2":218}]],"length":9995,"saved":false}
{"ts":1349368962282,"patch":[[{"diffs":[[0," { \n"],[-1,"                                        console.log(\"record: \" + e.record + \", field: \" + e.field + \", value: \" + e.value);\n"],[0,"    "]],"start1":2153,"start2":2153,"length1":132,"length2":8},{"diffs":[[0,"imesheet');\n"],[1,"                                            \n                                            \n"],[0,"            "]],"start1":2297,"start2":2297,"length1":24,"length2":114}]],"length":9961,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349369399512,"patch":[[{"diffs":[[0,"log("],[-1,"'this is a times"],[1,"e.TimeS"],[0,"heet"],[-1,"'"],[1,".DateTime"],[0,");\n "]],"start1":2281,"start2":2281,"length1":29,"length2":28},{"diffs":[[0,"               \n"],[1,""],[0,"                "]],"start1":7907,"start2":7907,"length1":32,"length2":32},{"diffs":[[0,"});\n"],[-1,"Ext.define('CustomApp', {\n    extend: 'Rally.app.App',\n    componentCls: 'app',\n\n\n    _loadTasksGrid: function(tasksGridDate, timeSheetData) {\n        console.log(\"Loading tasks grid...\");\n        var prettyDate = Rally.util.DateTime.add(tasksGridDate, \"minute\", tasksGridDate.getTimezoneOffset());\n         Rally.data.ModelFactory.getModel({\n                        type: 'Task',\n                        success: function(model) {\n                            this.add( {\n                                xtype: 'component',\n                                html: 'My Tasks for: ' +Rally.util.DateTime.format(prettyDate, \"D, M d, Y\")\n                            });\n                            var theModel = Ext.define( 'THModel', {\n                                extend: model,\n                                alias: 'THModel',\n                                fields: [\n                                    { name: \"TimeSheet\", type: \"number\", tpl:'test', readOnly: false, persist: true, editor: { xtype: 'rallynumberfield' }} \n        \n                            });\n                            console.log(theModel);\n                            this.grid = this.add({\n                                xtype: 'rallygrid',\n                                model: theModel,\n                                columnCfgs: [\n                                    'FormattedID', \n                                    'Name',\n                                    'Owner',\n                                    'State',\n                                    'ToDo',\n                                    { text: Rally.util.DateTime.format(prettyDate, \"D M d\"), dataIndex: 'TimeSheet', tpl: ''  }\n                                ],\n                                \n                                storeConfig: {\n                                    filters: [\n                                        {\n                                            property: 'Owner',\n                                            operator: '=',\n                                            value: this.getContext().getUser()._ref\n                                        },\n                                        {\n                                            property: 'Iteration.StartDate',\n                                            operator: '<=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        },\n                                        {\n                                            property: 'Iteration.EndDate',\n                                            operator: '>=',\n                                            value: Rally.util.DateTime.toIsoString(tasksGridDate, false)\n                                        }\n                                    ],\n                                    listeners: {\n                                        load: function(store, data, success) {\n                                            console.log(data);\n                                            //debugger;\n                                            Ext.each( data, function( taskRow ) {\n                                                var totalHoursPerTask = 0;\n                                                Ext.each( timeSheetData, function( timeSheetRecord) {\n                                                    var timeEntryItem = timeSheetRecord.get('TimeEntryItem');\n                                                    console.log(timeSheetRecord.get('DateVal') + \" vs \" + tasksGridDate);\n                                                    if ( timeEntryItem.Task != null && Ext.Date.isEqual(timeSheetRecord.get('DateVal'), tasksGridDate)){\n                                                        var teiTaskRef = new Rally.util.Ref(timeEntryItem.Task._ref);\n                                                        if( teiTaskRef.getOid() === new Rally.util.Ref(taskRow.get(\"_ref\")).getOid()) {\n                                                            totalHoursPerTask += timeSheetRecord.get('Hours');\n                                                        }\n                                                    }\n                                                });\n                                                taskRow.set('TimeSheet', totalHoursPerTask);\n                                            });\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        scope: this\n                    });\n    },\n    \n    _isWeekDay: function(date) {\n        return (date.getUTCDay() != 0 && date.getUTCDay() != 6);\n    },\n    \n    _lastTenWorkDays: function(currentDate) {\n      var dates = [];\n      while(dates.length < 10 ){\n          // NOTE: getUTCDay returns the day in GMT\n          if( this._isWeekDay(currentDate)) {\n            dates.unshift(currentDate);\n          }\n          currentDate = Rally.util.DateTime.add(currentDate, 'day', -1);\n      }\n      return dates;\n    },\n    \n    launch: function() {\n        console.log('launching....');\n        var startDate = Rally.util.DateTime.fromIsoString( Rally.util.DateTime.format(new Date(), \"Y-m-d\\\\T00:00:00.000\\\\Z\"));\n        console.log(\"TODAY IS: \" + new Date());\n        console.log(\"START DATE IS \" + startDate);    \n        var lastTenWorkDays = this._lastTenWorkDays(startDate);\n        console.log(lastTenWorkDays);\n        var startDate = lastTenWorkDays[0];\n        Ext.create('Rally.data.WsapiDataStore', {\n            model: 'TimeEntryValue',\n            autoLoad: true,\n            listeners: {\n                load: function(store, data, success) {\n                    var badDay = null;\n                    var currentDayHoursCnt = 0;\n                    var currentRecordIdx = 0;\n                    Ext.Array.each( lastTenWorkDays, function(day) {\n                        \n                        var currentRecordDay = data[currentRecordIdx].get('DateVal');\n                        console.log(currentRecordDay.toUTCString() + \" vs \" + day.toUTCString());\n                        \n                        // What if they enter a time on a weekend?\n                        \n                        do {\n                            if(data[currentRecordIdx].get('TimeEntryItem').Task != null) console.log(\"NOT NULL TASK!\");\n                            if( this._isWeekDay(currentRecordDay) ) {\n                                currentDayHoursCnt += data[currentRecordIdx].get('Hours');\n                            }\n                            if(currentRecordIdx < (data.length-1)) {\n                                currentRecordDay = data[++currentRecordIdx].get('DateVal');\n                            } else {\n                                break;\n                            }\n                        } while( Ext.Date.isEqual( currentRecordDay, day)) ;\n                        \n                        console.log(day.toUTCString() + \" for \" + currentDayHoursCnt);\n                        if(currentDayHoursCnt < 8) {\n                            badDay = day;\n                            return false;\n                        }\n                        currentDayHoursCnt = 0;\n                    }, this);\n                    var msgCls = \"ok\";\n                    var htmlMessage = 'All is well.';\n                    if(badDay != null) {\n                        msgCls = \"bad\";\n                        var prettyDate = Rally.util.DateTime.add(badDay, \"minute\", badDay.getTimezoneOffset());\n                        htmlMessage = 'You only entered ' + currentDayHoursCnt + ' on ' + Rally.util.DateTime.format(prettyDate, \"D, M d, Y\");\n                        this._loadTasksGrid(badDay, data);\n                    }\n                    console.log(htmlMessage);\n                    this.add( {\n                        xtype: 'component',\n                        cls: \"attention \" + msgCls,\n                        html: htmlMessage\n                    });\n                    this.add( {\n                        xtype: 'button',\n                        text: 'Click here to access your timesheet.',\n                        href: '/#/timesheet'\n                        \n                    });\n                },\n                scope: this\n            },\n            fetch: ['Hours','DateVal', 'TimeEntryItem', 'Task'],\n            filters: [\n                {\n                    property: 'TimeEntryItem.User',\n                    operator: '=',\n                    value: this.getContext().getUser()._ref\n                },\n                {\n                    property: 'DateVal',\n                    operator: '>=',\n                    value: Rally.util.DateTime.toIsoString(startDate, false)\n                }],\n            sorters: [\n                {\n                    property: 'DateVal',\n                    direction: 'ASC'\n                }]\n                \n        });\n        \n       \n    }\n});\n"]],"start1":9956,"start2":9956,"length1":9009,"length2":4}]],"length":9960,"saved":false}
{"ts":1349369448988,"patch":[[{"diffs":[[0,"imeSheet"],[-1,".DateTime"],[0,");\n     "]],"start1":2288,"start2":2288,"length1":25,"length2":16}]],"length":9951,"saved":false}
{"ts":1349369549092,"patch":[[{"diffs":[[0,"e.log(e."],[-1,"TimeSheet"],[1,"record"],[0,");\n     "]],"start1":2279,"start2":2279,"length1":25,"length2":22}]],"length":9948,"saved":false}
{"ts":1349369763315,"patch":[[{"diffs":[[0,"g(e."],[-1,"record"],[1,"FormattedID"],[0,");\n "]],"start1":2283,"start2":2283,"length1":14,"length2":19}]],"length":9953,"saved":false}
{"ts":1349369819145,"patch":[[{"diffs":[[0,"e.log(e."],[1,"data."],[0,"Formatte"]],"start1":2279,"start2":2279,"length1":16,"length2":21}]],"length":9958,"saved":false}
{"ts":1349369908805,"patch":[[{"diffs":[[0,"g(e."],[-1,"data.FormattedID"],[1,"record"],[0,");\n "]],"start1":2283,"start2":2283,"length1":24,"length2":14}]],"length":9948,"saved":false}
{"ts":1349370072117,"patch":[[{"diffs":[[0,"meSheet\") {\n"],[1,"                                            var changedTask = e.record;\n"],[0,"            "]],"start1":2217,"start2":2217,"length1":24,"length2":96},{"diffs":[[0,"ole.log("],[-1,"e.record"],[1,"changedTask"],[0,");\n     "]],"start1":2349,"start2":2349,"length1":24,"length2":27}]],"length":10023,"saved":false}
{"ts":1349370126286,"patch":[[{"diffs":[[0,"(changedTask"],[1,".FormattedID"],[0,");\n         "]],"start1":2356,"start2":2356,"length1":24,"length2":36}]],"length":10035,"saved":false}
{"ts":1349370654632,"patch":[[{"diffs":[[0,"gedTask."],[1,"Get('"],[0,"Formatte"]],"start1":2361,"start2":2361,"length1":16,"length2":21},{"diffs":[[0,"mattedID"],[1,"')"],[0,");\n     "]],"start1":2377,"start2":2377,"length1":16,"length2":18}]],"length":10042,"saved":false}
{"ts":1349370890400,"patch":[[{"diffs":[[0,"ask."],[-1,"Get('FormattedID')"],[1,"_ref"],[0,");\n "]],"start1":2365,"start2":2365,"length1":26,"length2":12}]],"length":10028,"saved":false}
{"ts":1349370916919,"patch":[[{"diffs":[[0,"(changedTask"],[-1,"._ref"],[0,");\n         "]],"start1":2356,"start2":2356,"length1":29,"length2":24}]],"length":10023,"saved":false}
{"ts":1349370956823,"patch":[[{"diffs":[[0,"(changedTask"],[1,".data"],[0,");\n         "]],"start1":2356,"start2":2356,"length1":24,"length2":29}]],"length":10028,"saved":false}
{"ts":1349371004483,"patch":[[{"diffs":[[0,"gedTask.data"],[1,".Get('FormattedID')"],[0,");\n         "]],"start1":2361,"start2":2361,"length1":24,"length2":43}]],"length":10047,"saved":false}
{"ts":1349371034594,"patch":[[{"diffs":[[0,"ata."],[-1,"Get('"],[0,"Form"]],"start1":2370,"start2":2370,"length1":13,"length2":8},{"diffs":[[0,"mattedID"],[-1,"')"],[0,");\n     "]],"start1":2377,"start2":2377,"length1":18,"length2":16}]],"length":10040,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349371846482,"patch":[[{"diffs":[[0,"ezoneOffset());\n"],[1,"        var timeEntryItemStore = Ext.create('Rally.data.WsapiDataStore', { model: 'TimeEntryItem'});\n"],[0,"         Rally.d"]],"start1":283,"start2":283,"length1":32,"length2":133},{"diffs":[[0,"tedID);\n"],[1,"                                        \n                                            // Need to create a TimeEntryItem\n"],[0,"        "]],"start1":2481,"start2":2481,"length1":16,"length2":135}]],"length":10260,"saved":false}
{"ts":1349371868162,"patch":[[{"diffs":[[0,"heetData"],[1,", timeEntryValueStore"],[0,") {\n    "]],"start1":131,"start2":131,"length1":16,"length2":37},{"diffs":[[0,"badDay, data"],[1,", store"],[0,");\n         "]],"start1":9047,"start2":9047,"length1":24,"length2":31}]],"length":10288,"saved":false}
{"ts":1349372043666,"patch":[[{"diffs":[[0,"tryItem\n"],[1,"                                            var newTEI = timeEntryItemStore.add( { 'Project': '', 'Task': '', 'User': '', 'WeekStartDate': '', 'WorkProduct': '' });"],[0,"        "]],"start1":2621,"start2":2621,"length1":16,"length2":180}]],"length":10452,"saved":false}
{"ts":1349372054665,"patch":[[{"diffs":[[0,"Task"],[-1,".data.FormattedID"],[0,");\n "]],"start1":2486,"start2":2486,"length1":25,"length2":8}]],"length":10435,"saved":false}
{"ts":1349372205828,"patch":[[{"diffs":[[0,"reConfig: {\n"],[1,"                                    fetch: \"Project, WorkProduct\",\n"],[0,"            "]],"start1":3016,"start2":3016,"length1":24,"length2":91}]],"length":10502,"saved":false}
{"ts":1349372273532,"patch":[[{"diffs":[[0,"   'State',\n"],[1,"                                    'Project',\n                                    'WorkProduct',\n"],[0,"            "]],"start1":1593,"start2":1593,"length1":24,"length2":122},{"diffs":[[0,": {\n"],[-1,"                                    fetch: \"Project, WorkProduct\",\n"],[0,"    "]],"start1":3122,"start2":3122,"length1":75,"length2":8}]],"length":10533,"saved":false}
{"ts":1349372466583,"patch":[[{"diffs":[[0,"t': "],[-1,"'', 'Task': '', 'User': ''"],[1,"changedTask.get('Project')._ref, 'Task': changedTask.get(\"_ref\"), 'User': changedTask.get('Owner')._ref"],[0,", 'W"]],"start1":2800,"start2":2800,"length1":34,"length2":111},{"diffs":[[0,"oduct': "],[-1,"''"],[1,"changedTask.get('WorkProduct')._ref"],[0," });    "]],"start1":2937,"start2":2937,"length1":18,"length2":51}]],"length":10643,"saved":false}
